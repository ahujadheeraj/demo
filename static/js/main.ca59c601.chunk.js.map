{"version":3,"sources":["assets/img/adt.svg","assets/img/flipkart.svg","assets/img/playment.svg","assets/img/yourstory.svg","assets/img/honda.svg","assets/img/growth.jpg","assets/img/enterprise.jpg","assets/img/sales.jpg","components/Head/Head.js","components/Container/Container.js","components/Window/Growth/Growth.js","components/Window/Enterprise/Enterprise.js","components/Window/Sales/Sales.js","components/Window/Window.js","components/Demo/Demo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","head","props","className","container","src","Adt","alt","Honda","Playment","Yourstory","Flipkart","growth","style","textAlign","color","margin","growthpic","window","demo","fontWeight","fontSize","forHtml","type","id","placeholder","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ca59c601.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/adt.f1be2b44.svg\";","module.exports = __webpack_public_path__ + \"static/media/flipkart.7c01bfc0.svg\";","module.exports = __webpack_public_path__ + \"static/media/playment.e19de7ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/yourstory.bf876d81.svg\";","module.exports = __webpack_public_path__ + \"static/media/honda.77d9431c.svg\";","module.exports = __webpack_public_path__ + \"static/media/growth.ba7c9094.jpg\";","module.exports = __webpack_public_path__ + \"static/media/enterprise.117f84ae.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sales.2f6134e6.jpg\";","import React from 'react'\r\nimport './Head.css'\r\n\r\nconst head = (props) =>(\r\n    <div className = \"head\">\r\n        <div className = \"head-left\">\r\n            <div className = \"subhead\">\r\n                Reliability is never an accident.\r\n            </div>\r\n            <h2>\r\n            Incident Response - The SRE Way.\r\n            </h2>\r\n            \r\n            <div className = \"content\">\r\n                Uplevel your Incident Management with\r\n                the next generation Reliability Orchestration \r\n                Engine based on Site Reliability Engineering (SRE)\r\n            </div>\r\n            \r\n            <div className = \"btn\">\r\n            <button>Try it for free</button>\r\n            <button>Schedule a demo</button>\r\n            </div>\r\n            \r\n        </div>\r\n\r\n        <div className = \"head-right\">\r\n\r\n        </div>\r\n\r\n    </div>\r\n)\r\n\r\nexport default head;","import React from 'react'\r\nimport './Container.css'\r\nimport Adt from '../../assets/img/adt.svg'\r\nimport Flipkart from '../../assets/img/flipkart.svg'\r\nimport Playment from '../../assets/img/playment.svg'\r\nimport Yourstory from '../../assets/img/yourstory.svg'\r\nimport Honda from '../../assets/img/honda.svg'\r\n\r\n\r\nconst container = (props) => (\r\n    <div className = \"container\">\r\n        <h1>Youâ€™re in good company.</h1>\r\n        <div className = \"line\">\r\n        <p>THE GOLD STANDARD FOR MODERN INCIDENT MANAGEMENT</p>\r\n        <div className = \"companies\">\r\n            <img src = {Adt} alt = \"Adt\"/>\r\n            <img src = {Honda} alt = \"honda\"/>\r\n            <img src = {Playment} alt = \"playment\"/>\r\n            <img src = {Yourstory} alt = \"yourstory\"/>\r\n            <img src = {Flipkart} alt = \"flipkart\"/>\r\n        </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default container;\r\n","import React from 'react'\r\nimport './Growth.css'\r\nimport growthpic from '../../../assets/img/growth.jpg'\r\n\r\nconst growth = (props) => (\r\n    <div>\r\n        <h1 style = {{textAlign:\"center\",color: \"rgb(80, 75, 75)\",margin:\"40px 0\"}}>Drive demand and conversion with automation</h1>\r\n        <div className = \"Growth\">\r\n        <div className = \"card\">\r\n            <img src = {growthpic} alt = \"growth\"/>\r\n            <div className = \"context\" style = {{textAlign:\"initial\"}}>\r\n                <h2 style = {{color:\"teal\"}}>Outreach</h2>\r\n                <p>\r\n                Using Clearbit Reveal, Outreach starts sales conversations earlier (with personalized chat\r\n                 and alerts about high-value prospects) \r\n                and generates qualified leads with ads that perform 2x better than generic retargeting.\r\n                </p>\r\n            </div>\r\n\r\n        </div>\r\n        <div className = \"grid\">\r\n            <div className = \"Frame\">\r\n                <div className = \"Title\"><span className = \"big\">$500K</span> in ARR </div>\r\n                <p>\r\n                Frame.io made half a million dollars in ARR\r\n                by creating a personalized flow for new trial signups based on company size.\r\n                </p>\r\n            </div>\r\n            <div className = \"Gong\">\r\n                <div className = \"Title\"><span className = \"big\">70%</span> lift in form conversions </div>\r\n                <p>\r\n                Gong increased demo requests by 5x, generated hundreds of qualified \r\n                opportunities, and accelerated deals by fast-tracking best-fit leads.\r\n                </p>\r\n                \r\n            </div>\r\n            <div className = \"Prosify\">\r\n                <div className = \"Title\">Automate key workflows</div>\r\n                <p>\r\n                We needed to automatically identify the leads that fit closer to our \r\n                ideal customer persona instead of manually sorting through hundreds of leads every day.\r\n                Clearbit's data powers\r\n                our robust lead scoring system, which passes the right leads to our inbound sales team.\r\n                </p>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n    </div>\r\n)\r\n\r\nexport default growth;","import React from 'react'\r\nimport './Enterprise.css'\r\nimport growthpic from '../../../assets/img/enterprise.jpg'\r\n\r\nconst growth = (props) => (\r\n    <div>\r\n        <h1 style = {{margin:\"40px 0\",textAlign:\"center\",color: \"rgb(80, 75, 75)\"}}>\r\n        Grow more target accounts for the sales team</h1>\r\n        <div className = \"Growth\">\r\n        <div className = \"card\">\r\n            <img src = {growthpic} alt = \"growth\"/>\r\n            <div className = \"context\" style = {{textAlign:\"initial\"}} >\r\n                <h2 style = {{color:\"steelblue\"}}>TEALIUM</h2>\r\n                <p>\r\n                Using Clearbit Reveal, Tealium personalizes their\r\n                 website and landing pages based on the visitor's \r\n                 industry and location, increasing conversion and \r\n                 providing a tailored experience for every lead.\r\n                </p>\r\n            </div>\r\n\r\n        </div>\r\n        <div className = \"grid\">\r\n            <div className = \"Frame\">\r\n                <div className = \"Title\">Focus on more meaningful KPIs.</div>\r\n                <p>\r\n                Frame.io made half a million dollars in ARR\r\n                by creating a personalized flow for new trial signups based on company size.\r\n                </p>\r\n            </div>\r\n            <div className = \"Gong\">\r\n                <div className = \"Title\">Clearbit is our source of truth</div>\r\n                <p>\r\n                Gong increased demo requests by 5x, generated hundreds of qualified \r\n                opportunities, and accelerated deals by fast-tracking best-fit leads.\r\n                </p>\r\n                \r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n    </div>\r\n)\r\n\r\nexport default growth;","import React from 'react'\r\nimport './Sales.css'\r\nimport growthpic from '../../../assets/img/sales.jpg'\r\n\r\nconst growth = (props) => (\r\n    <div>\r\n        <h1 style = {{margin:\"40px 0\",textAlign:\"center\",color: \"rgb(80, 75, 75)\"}}>\r\n        Context to close more deals, more quickly\r\n        </h1>\r\n        <div className = \"Growth\">\r\n        <div className = \"card\">\r\n            <img src = {growthpic} alt = \"growth\"/>\r\n            <div className = \"context\" style = {{textAlign:\"initial\"}}>\r\n                <h2 style = {{color :\"green\"}}>Segment</h2>\r\n                <p>\r\n                Segment's sales reps save 15 hours per week on lead research. \r\n                With Clearbit integrated into Salesforce, they always have \r\n                complete company, geo, and demographic intelligence on leads before sales calls.\r\n                </p>\r\n            </div>\r\n\r\n        </div>\r\n        <div className = \"grid\">\r\n            <div className = \"Frame\">\r\n                <div className = \"Title\"><span className = \"big\">2700</span> new SQLs per week </div>\r\n                <p>\r\n                In less than a month, Intercom increased pipeline by 2700 \r\n                sales qualified leads per week and decreased bounce rates.\r\n                </p>\r\n            </div>\r\n            <div className = \"Gong\">\r\n                <div className = \"Title\"><span className = \"big\">50%</span>  more signups</div>\r\n                <p>\r\n                After experiencing a 60% drop-off rate, \r\n                Livestorm improved conversion by 50% by shortening their signup form.\r\n                </p>\r\n                \r\n            </div>\r\n            <div className = \"Prosify\">\r\n                <div className = \"Title\">The data we need for automation</div>\r\n                <p>\r\n                When a new account is created, we use Clearbit to enrich the record and then \r\n                1) lead routing based on location or industry, 2) lead scoring, \r\n                3) training machine learning models. \r\n                Clearbit stands out as having the most straight-forward, \r\n                elegant and well-documented sales data.\r\n                </p>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n    </div>\r\n)\r\n\r\nexport default growth;","import React from 'react'\r\nimport Growth from './Growth/Growth'\r\nimport Enterprise from './Enterprise/Enterprise'\r\nimport Sales from './Sales/Sales'\r\nimport './Window.css'\r\n\r\n\r\nconst window = (props) => (\r\n    <div className = \"window\">\r\n        <Growth />\r\n        <Enterprise />\r\n        <Sales />\r\n\r\n    </div>\r\n)\r\n\r\nexport default window;","import React from 'react'\r\nimport './Demo.css'\r\n\r\nconst demo = (props) =>(\r\n    <div className = \"demo\">\r\n        <div className = \"demo-container\">\r\n            <div className = \"left\">\r\n            <h2><p>See why the worldâ€™s best <br />companies use \r\n                Clearbit<br /> to become truly data-driven.</p></h2>\r\n                \r\n                    <div className = \"demo-quote\">\r\n                        <p>\r\n                        Integrating Clearbit was the biggest impact <br />investment of \r\n                        anything weâ€™ve done to date.\r\n                        </p>\r\n                        <p>\r\n                        <h3 style = {{color: \"#6b90c0\" ,fontWeight: \"600\",fontSize:\"22px\",margin:\"2px\" }}>Guillaume Cabane</h3>\r\n                            VP of Growth, Drift\r\n                        </p>\r\n                    </div>\r\n                \r\n            </div>\r\n            <div className = \"right\">\r\n                <div className = \"shadow\">\r\n                <h2 style = {{textAlign:\"center\",color:\"rgb(251, 251, 251)\"}}>Get Started</h2>\r\n                <form>\r\n                    <ul>\r\n                        <li>\r\n                        <label forHtml = \"Email\">Email</label>\r\n                        </li>\r\n                        <li>\r\n                        <input type = \"text\" id = \"Email\" placeholder = \"you@Company-email.com\"/> \r\n                        </li>\r\n                        <li>\r\n                        <label forHtml = \"message\">Message</label>\r\n                        </li>\r\n                        <li>\r\n                        <textarea id = \"message\" placeholder = \"What are you hoping to accomplish?\" />  \r\n                        </li>\r\n                        <li></li>\r\n                        <li>\r\n                            <button><b>REQUEST A DEMO</b></button>\r\n                        </li>\r\n                    </ul>\r\n                    \r\n                </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default demo;","import React from 'react';\nimport Head from './components/Head/Head'\nimport Container from './components/Container/Container'\nimport Window from './components/Window/Window'\nimport Demo from './components/Demo/Demo'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Head />\n      <Container />\n      <Window />\n      <Demo />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}